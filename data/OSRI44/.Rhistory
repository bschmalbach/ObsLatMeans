#observed score vs latent score, gender diffs
rm(list=ls())
library(lavaan)
df <- read.csv("data.csv",sep = "\t")
View(df)
df <- df[df$gender %in% c(1,2),]
df <- df[rowSums(df[1:44]==0)==0,]
EFAutilities::efa(df[1:44])
EFAutilities::efa(df[1:10000,1:44])
EFAutilities::efa(df[1:100,1:44])
t <- df[1:100,1:44]
EFAutilities::efa(t)
psych::fa(t)
model <- "MASC =~ Q1 + Q3 + Q5 + Q7 + Q9 + Q11 + Q13 + Q15 + Q17 + Q19 + Q21 + Q23 + Q25 + Q27 + Q29 + Q31 + Q33 + Q35 + Q37 + Q39 + Q41 + Q43
FEM =~ Q2 + Q4 + Q6 + Q8 + Q10 + Q12 + Q14 + Q16 + Q18 + Q20 + Q22 + Q24 + Q26 + Q28 + Q30 + Q32 + Q34 + Q36 + Q38 + Q40 + Q42 + Q44"
fit <- sem(model, t, estimator="mlr", group = "gender", group.equal=c("loadings", "intercepts", "residuals"), std.lv=T, auto.fix.first=F)
View(t)
t <- df[1:100,]
model <- "MASC =~ Q1 + Q3 + Q5 + Q7 + Q9 + Q11 + Q13 + Q15 + Q17 + Q19 + Q21 + Q23 + Q25 + Q27 + Q29 + Q31 + Q33 + Q35 + Q37 + Q39 + Q41 + Q43
FEM =~ Q2 + Q4 + Q6 + Q8 + Q10 + Q12 + Q14 + Q16 + Q18 + Q20 + Q22 + Q24 + Q26 + Q28 + Q30 + Q32 + Q34 + Q36 + Q38 + Q40 + Q42 + Q44"
fit <- sem(model, t, estimator="mlr", group = "gender", group.equal=c("loadings", "intercepts", "residuals"), std.lv=T, auto.fix.first=F)
t <- df[1:1000,]
model <- "MASC =~ Q1 + Q3 + Q5 + Q7 + Q9 + Q11 + Q13 + Q15 + Q17 + Q19 + Q21 + Q23 + Q25 + Q27 + Q29 + Q31 + Q33 + Q35 + Q37 + Q39 + Q41 + Q43
FEM =~ Q2 + Q4 + Q6 + Q8 + Q10 + Q12 + Q14 + Q16 + Q18 + Q20 + Q22 + Q24 + Q26 + Q28 + Q30 + Q32 + Q34 + Q36 + Q38 + Q40 + Q42 + Q44"
fit <- sem(model, t, estimator="mlr", group = "gender", group.equal=c("loadings", "intercepts", "residuals"), std.lv=T, auto.fix.first=F)
lat <- (lavInspect(fit, what="std")$`2`$alpha)*(-1)
lat
lat <- (lavInspect(fit, what="std")$`1`$alpha)
lat
#obs diff
df$PWE_sum <- scale(rowSums(df[1:19]))
seq(1, 43, 2)
#obs diff
df$MASK_sum <- scale(rowSums(df[seq(1, 43, 2)]))
df$FEM_sum <- scale(rowSums(df[seq(2, 44, 2)]))
get_d <- function(x){
v1 <- x[df$gender==1]
v2 <- x[df$gender==2]
mean_diff <- mean(v1)-mean(v2)
pool_sd <- sqrt((var(v1)+var(v2))/2)
d <- mean_diff/pool_sd
return(d)
}
obs <- c(get_d(df$MASK_sum),
get_d(df$FEM_sum))
res <- data.frame(cbind(lat, obs))
names(res)[1] <- "lat"
n_g <- c(sum(df$gender==1), sum(df$gender==2))
res$diff <- res$lat-res$obs
res$ratio <- res$obs/res$lat
res$var1 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$lat^2 / (2*(n_g[1]+n_g[2])))
res$var2 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$obs^2 / (2*(n_g[1]+n_g[2])))
res$pool_sd <- sqrt((res$var1+res$var2)/2)
res$z <- res$diff/(res$pool_sd/sqrt(sum(n_g)))
res$p <- 2*(1-pnorm(abs(res$z)))
res$dd <- res$diff/(res$pool_sd)
res$UL_CI <- res$diff + 1.96*res$pool_sd
res$LL_CI <- res$diff - 1.96*res$pool_sd
res$n <- sum(n_g)
res
rm(list=ls())
library(lavaan)
library(knitr)
library(tidyverse)
library(pbapply)
library(kableExtra)
library(lavaan)
df <- read.csv("data.csv",sep = "\t")[1:1000,]
df <- df[df$gender %in% c(1,2),]
df <- df[rowSums(df[1:44]==0)==0,]
t <- df
#recode items
rec_vec <- c(9, 13, 15)
for (i in rec_vec) {
df[,i] <- (6-df[,i])
}
model <- "MASC =~ Q1 + Q3 + Q5 + Q7 + Q9 + Q11 + Q13 + Q15 + Q17 + Q19 + Q21 + Q23 + Q25 + Q27 + Q29 + Q31 + Q33 + Q35 + Q37 + Q39 + Q41 + Q43
FEM =~ Q2 + Q4 + Q6 + Q8 + Q10 + Q12 + Q14 + Q16 + Q18 + Q20 + Q22 + Q24 + Q26 + Q28 + Q30 + Q32 + Q34 + Q36 + Q38 + Q40 + Q42 + Q44"
fit <- sem(model, t, estimator="mlr", group = "gender", group.equal=c("loadings", "intercepts"), std.lv=T, auto.fix.first=F)
lat <- (lavInspect(fit, what="std")$`1`$alpha)
#obs diff
df$MASK_sum <- scale(rowSums(df[seq(1, 43, 2)]))
df$FEM_sum <- scale(rowSums(df[seq(2, 44, 2)]))
get_d <- function(x){
v1 <- x[df$gender==1]
v2 <- x[df$gender==2]
mean_diff <- mean(v1)-mean(v2)
pool_sd <- sqrt((var(v1)+var(v2))/2)
d <- mean_diff/pool_sd
return(d)
}
obs <- c(get_d(df$MASK_sum),
get_d(df$FEM_sum))
res <- data.frame(cbind(lat, obs))
names(res)[1] <- "lat"
n_g <- c(sum(df$gender==1), sum(df$gender==2))
res$diff <- res$lat-res$obs
res$ratio <- res$obs/res$lat
res$var1 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$lat^2 / (2*(n_g[1]+n_g[2])))
res$var2 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$obs^2 / (2*(n_g[1]+n_g[2])))
res$pool_sd <- sqrt((res$var1+res$var2)/2)
res$z <- res$diff/(res$pool_sd/sqrt(sum(n_g)))
res$p <- 2*(1-pnorm(abs(res$z)))
res$dd <- res$diff/(res$pool_sd)
res$UL_CI <- res$diff + 1.96*res$pool_sd
res$LL_CI <- res$diff - 1.96*res$pool_sd
res$n <- sum(n_g)
res
#observed score vs latent score, gender diffs
library(lavaan)
df <- read.csv("data.csv",sep = "\t")[1:1000,]
df <- df[df$gender %in% c(1,2),]
df <- df[rowSums(df[1:44]==0)==0,]
t <- df
#EFAutilities::efa(t)
#psych::fa(t)
#recode items
rec_vec <- c(9, 13, 15)
for (i in rec_vec) {
df[,i] <- (6-df[,i])
}
model <- "MASC =~ Q1 + Q3 + Q5 + Q7 + Q9 + Q11 + Q13 + Q15 + Q17 + Q19 + Q21 + Q23 + Q25 + Q27 + Q29 + Q31 + Q33 + Q35 + Q37 + Q39 + Q41 + Q43
FEM =~ Q2 + Q4 + Q6 + Q8 + Q10 + Q12 + Q14 + Q16 + Q18 + Q20 + Q22 + Q24 + Q26 + Q28 + Q30 + Q32 + Q34 + Q36 + Q38 + Q40 + Q42 + Q44"
fit <- sem(model, t, estimator="mlr", group = "gender", group.equal=c("loadings", "intercepts", "residuals"), std.lv=T, auto.fix.first=F)
lat <- (lavInspect(fit, what="std")$`1`$alpha)
#obs diff
df$MASK_sum <- scale(rowSums(df[seq(1, 43, 2)]))
df$FEM_sum <- scale(rowSums(df[seq(2, 44, 2)]))
get_d <- function(x){
v1 <- x[df$gender==1]
v2 <- x[df$gender==2]
mean_diff <- mean(v1)-mean(v2)
pool_sd <- sqrt((var(v1)+var(v2))/2)
d <- mean_diff/pool_sd
return(d)
}
obs <- c(get_d(df$MASK_sum),
get_d(df$FEM_sum))
res <- data.frame(cbind(lat, obs))
names(res)[1] <- "lat"
#compare
n_g <- c(sum(df$gender==1), sum(df$gender==2))
res$diff <- res$lat-res$obs
res$ratio <- res$obs/res$lat
res$var1 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$lat^2 / (2*(n_g[1]+n_g[2])))
res$var2 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$obs^2 / (2*(n_g[1]+n_g[2])))
res$pool_sd <- sqrt((res$var1+res$var2)/2)
res$z <- res$diff/(res$pool_sd/sqrt(sum(n_g)))
res$p <- 2*(1-pnorm(abs(res$z)))
res$dd <- res$diff/(res$pool_sd)
res$UL_CI <- res$diff + 1.96*res$pool_sd
res$LL_CI <- res$diff - 1.96*res$pool_sd
res$n <- sum(n_g)
res
#observed score vs latent score, gender diffs
library(lavaan)
df <- read.csv("data.csv",sep = "\t")[1:10000,]
df <- df[df$gender %in% c(1,2),]
df <- df[rowSums(df[1:44]==0)==0,]
t <- df
#EFAutilities::efa(t)
#psych::fa(t)
#recode items
rec_vec <- c(9, 13, 15)
for (i in rec_vec) {
df[,i] <- (6-df[,i])
}
model <- "MASC =~ Q1 + Q3 + Q5 + Q7 + Q9 + Q11 + Q13 + Q15 + Q17 + Q19 + Q21 + Q23 + Q25 + Q27 + Q29 + Q31 + Q33 + Q35 + Q37 + Q39 + Q41 + Q43
FEM =~ Q2 + Q4 + Q6 + Q8 + Q10 + Q12 + Q14 + Q16 + Q18 + Q20 + Q22 + Q24 + Q26 + Q28 + Q30 + Q32 + Q34 + Q36 + Q38 + Q40 + Q42 + Q44"
fit <- sem(model, t, estimator="mlr", group = "gender", group.equal=c("loadings", "intercepts", "residuals"), std.lv=T, auto.fix.first=F)
lat <- (lavInspect(fit, what="std")$`1`$alpha)
#obs diff
df$MASK_sum <- scale(rowSums(df[seq(1, 43, 2)]))
df$FEM_sum <- scale(rowSums(df[seq(2, 44, 2)]))
get_d <- function(x){
v1 <- x[df$gender==1]
v2 <- x[df$gender==2]
mean_diff <- mean(v1)-mean(v2)
pool_sd <- sqrt((var(v1)+var(v2))/2)
d <- mean_diff/pool_sd
return(d)
}
obs <- c(get_d(df$MASK_sum),
get_d(df$FEM_sum))
res <- data.frame(cbind(lat, obs))
names(res)[1] <- "lat"
#compare
n_g <- c(sum(df$gender==1), sum(df$gender==2))
res$diff <- res$lat-res$obs
res$ratio <- res$obs/res$lat
res$var1 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$lat^2 / (2*(n_g[1]+n_g[2])))
res$var2 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$obs^2 / (2*(n_g[1]+n_g[2])))
res$pool_sd <- sqrt((res$var1+res$var2)/2)
res$z <- res$diff/(res$pool_sd/sqrt(sum(n_g)))
res$p <- 2*(1-pnorm(abs(res$z)))
res$dd <- res$diff/(res$pool_sd)
res$UL_CI <- res$diff + 1.96*res$pool_sd
res$LL_CI <- res$diff - 1.96*res$pool_sd
res$n <- sum(n_g)
res
#observed score vs latent score, gender diffs
library(lavaan)
df <- read.csv("data.csv",sep = "\t")
df <- df[df$gender %in% c(1,2),]
df <- df[rowSums(df[1:44]==0)==0,]
t <- df
#EFAutilities::efa(t)
#psych::fa(t)
#recode items
rec_vec <- c(9, 13, 15)
for (i in rec_vec) {
df[,i] <- (6-df[,i])
}
model <- "MASC =~ Q1 + Q3 + Q5 + Q7 + Q9 + Q11 + Q13 + Q15 + Q17 + Q19 + Q21 + Q23 + Q25 + Q27 + Q29 + Q31 + Q33 + Q35 + Q37 + Q39 + Q41 + Q43
FEM =~ Q2 + Q4 + Q6 + Q8 + Q10 + Q12 + Q14 + Q16 + Q18 + Q20 + Q22 + Q24 + Q26 + Q28 + Q30 + Q32 + Q34 + Q36 + Q38 + Q40 + Q42 + Q44"
fit <- sem(model, t, estimator="mlr", group = "gender", group.equal=c("loadings", "intercepts"), std.lv=T, auto.fix.first=F)
lat <- (lavInspect(fit, what="std")$`1`$alpha)
#obs diff
df$MASK_sum <- scale(rowSums(df[seq(1, 43, 2)]))
df$FEM_sum <- scale(rowSums(df[seq(2, 44, 2)]))
get_d <- function(x){
v1 <- x[df$gender==1]
v2 <- x[df$gender==2]
mean_diff <- mean(v1)-mean(v2)
pool_sd <- sqrt((var(v1)+var(v2))/2)
d <- mean_diff/pool_sd
return(d)
}
obs <- c(get_d(df$MASK_sum),
get_d(df$FEM_sum))
res <- data.frame(cbind(lat, obs))
names(res)[1] <- "lat"
#compare
n_g <- c(sum(df$gender==1), sum(df$gender==2))
res$diff <- res$lat-res$obs
res$ratio <- res$obs/res$lat
res$var1 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$lat^2 / (2*(n_g[1]+n_g[2])))
res$var2 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$obs^2 / (2*(n_g[1]+n_g[2])))
res$pool_sd <- sqrt((res$var1+res$var2)/2)
res$z <- res$diff/(res$pool_sd/sqrt(sum(n_g)))
res$p <- 2*(1-pnorm(abs(res$z)))
res$dd <- res$diff/(res$pool_sd)
res$UL_CI <- res$diff + 1.96*res$pool_sd
res$LL_CI <- res$diff - 1.96*res$pool_sd
res$n <- sum(n_g)
res
n_g <- c(sum(df$gender==1), sum(df$gender==2))
res$diff <- res$lat-res$obs
res$ratio <- res$obs/res$lat
res$var1 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$lat^2 / (2*(n_g[1]+n_g[2])))
n_g[1]
n_g[1]*n_g[2])
n_g[1]*n_g[2]
121680*121680
n_g[2]
121680*142898
n_g <- as.numeric(c(sum(df$gender==1), sum(df$gender==2)))
res$diff <- res$lat-res$obs
res$ratio <- res$obs/res$lat
res$var1 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$lat^2 / (2*(n_g[1]+n_g[2])))
res$var2 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$obs^2 / (2*(n_g[1]+n_g[2])))
res$pool_sd <- sqrt((res$var1+res$var2)/2)
res$z <- res$diff/(res$pool_sd/sqrt(sum(n_g)))
res$p <- 2*(1-pnorm(abs(res$z)))
res$dd <- res$diff/(res$pool_sd)
res$UL_CI <- res$diff + 1.96*res$pool_sd
res$LL_CI <- res$diff - 1.96*res$pool_sd
res$n <- sum(n_g)
res
set.seed(1)
sample(c(T,F),replace = T, size=10000)
set.seed(1)
sample(c(T,F),replace = T, size=10000)
library(lavaan)
set.seed(1)
df <- read.csv("data.csv",sep = "\t")[sample(c(T,F), size=1000, replace=T),]
df <- df[df$gender %in% c(1,2),]
df <- df[rowSums(df[1:44]==0)==0,]
library(lavaan)
set.seed(1)
df <- read.csv("data.csv",sep = "\t")[1:1000,]
df <- df[df$gender %in% c(1,2),]
df <- df[rowSums(df[1:44]==0)==0,]
t <- df
#EFAutilities::efa(t)
#psych::fa(t)
#recode items
rec_vec <- c(9, 13, 15)
for (i in rec_vec) {
df[,i] <- (6-df[,i])
}
model <- "MASC =~ Q1 + Q3 + Q5 + Q7 + Q9 + Q11 + Q13 + Q15 + Q17 + Q19 + Q21 + Q23 + Q25 + Q27 + Q29 + Q31 + Q33 + Q35 + Q37 + Q39 + Q41 + Q43
FEM =~ Q2 + Q4 + Q6 + Q8 + Q10 + Q12 + Q14 + Q16 + Q18 + Q20 + Q22 + Q24 + Q26 + Q28 + Q30 + Q32 + Q34 + Q36 + Q38 + Q40 + Q42 + Q44"
fit <- sem(model, t, estimator="mlr", group = "gender", group.equal=c("loadings", "intercepts"), std.lv=T, auto.fix.first=F)
lat <- (lavInspect(fit, what="std")$`1`$alpha)
#obs diff
df$MASK_sum <- scale(rowSums(df[seq(1, 43, 2)]))
df$FEM_sum <- scale(rowSums(df[seq(2, 44, 2)]))
get_d <- function(x){
v1 <- x[df$gender==1]
v2 <- x[df$gender==2]
mean_diff <- mean(v1)-mean(v2)
pool_sd <- sqrt((var(v1)+var(v2))/2)
d <- mean_diff/pool_sd
return(d)
}
obs <- c(get_d(df$MASK_sum),
get_d(df$FEM_sum))
res <- data.frame(cbind(lat, obs))
names(res)[1] <- "lat"
#compare
n_g <- as.numeric(c(sum(df$gender==1), sum(df$gender==2)))
res$diff <- res$lat-res$obs
res$ratio <- res$obs/res$lat
res$var1 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$lat^2 / (2*(n_g[1]+n_g[2])))
res$var2 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$obs^2 / (2*(n_g[1]+n_g[2])))
res$pool_sd <- sqrt((res$var1+res$var2)/2)
res$z <- res$diff/(res$pool_sd/sqrt(sum(n_g)))
res$p <- 2*(1-pnorm(abs(res$z)))
res$dd <- res$diff/(res$pool_sd)
res$UL_CI <- res$diff + 1.96*res$pool_sd
res$LL_CI <- res$diff - 1.96*res$pool_sd
res$n <- sum(n_g)
res$omega <- mean(unlist(semTools::reliability(fit, what="omega")))
res$omega
semTools::reliability(fit, what="omega")
unlist(semTools::reliability(fit, what="omega"))
mean(unlist(semTools::reliability(fit, what="omega")))
matrix(unlist(semTools::reliability(fit, what="omega")),nrow = nrow(res))
(matrix(unlist(semTools::reliability(fit, what="omega")),nrow = nrow(res), byrow = T))
colMeans(matrix(unlist(semTools::reliability(fit, what="omega")),nrow = nrow(res), byrow = T))
#observed score vs latent score, gender diffs
library(lavaan)
set.seed(1)
df <- read.csv("data.csv",sep = "\t")[1:1000,]
df <- df[df$gender %in% c(1,2),]
df <- df[rowSums(df[1:44]==0)==0,]
t <- df
#EFAutilities::efa(t)
#psych::fa(t)
#recode items
rec_vec <- c(9, 13, 15)
for (i in rec_vec) {
df[,i] <- (6-df[,i])
}
model <- "MASC =~ Q1 + Q3 + Q5 + Q7 + Q9 + Q11 + Q13 + Q15 + Q17 + Q19 + Q21 + Q23 + Q25 + Q27 + Q29 + Q31 + Q33 + Q35 + Q37 + Q39 + Q41 + Q43
FEM =~ Q2 + Q4 + Q6 + Q8 + Q10 + Q12 + Q14 + Q16 + Q18 + Q20 + Q22 + Q24 + Q26 + Q28 + Q30 + Q32 + Q34 + Q36 + Q38 + Q40 + Q42 + Q44"
fit <- sem(model, t, estimator="mlr", group = "gender", group.equal=c("loadings", "intercepts"), std.lv=T, auto.fix.first=F)
lat <- (lavInspect(fit, what="std")$`1`$alpha)
#obs diff
df$MASK_sum <- scale(rowSums(df[seq(1, 43, 2)]))
df$FEM_sum <- scale(rowSums(df[seq(2, 44, 2)]))
get_d <- function(x){
v1 <- x[df$gender==1]
v2 <- x[df$gender==2]
mean_diff <- mean(v1)-mean(v2)
pool_sd <- sqrt((var(v1)+var(v2))/2)
d <- mean_diff/pool_sd
return(d)
}
obs <- c(get_d(df$MASK_sum),
get_d(df$FEM_sum))
res <- data.frame(cbind(lat, obs))
names(res)[1] <- "lat"
#compare
n_g <- as.numeric(c(sum(df$gender==1), sum(df$gender==2)))
res$diff <- res$lat-res$obs
res$ratio <- res$obs/res$lat
res$var1 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$lat^2 / (2*(n_g[1]+n_g[2])))
res$var2 <- ((n_g[1]+n_g[2])/(n_g[1]*n_g[2])) + (res$obs^2 / (2*(n_g[1]+n_g[2])))
res$pool_sd <- sqrt((res$var1+res$var2)/2)
res$z <- res$diff/(res$pool_sd/sqrt(sum(n_g)))
res$p <- 2*(1-pnorm(abs(res$z)))
res$dd <- res$diff/(res$pool_sd)
res$UL_CI <- res$diff + 1.96*res$pool_sd
res$LL_CI <- res$diff - 1.96*res$pool_sd
res$n <- sum(n_g)
res$omega <- colMeans(matrix(unlist(semTools::reliability(fit, what="omega")),nrow = nrow(res), byrow = T))
res
